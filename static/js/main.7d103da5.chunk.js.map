{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsObject","map","good","index","name","id","SORT_TYPE_NAME","SORT_TYPE_LENGTH","App","useState","sortType","setSortType","isReversed","setIsReversed","resetButton","visibleGoods","goods","toReverse","sortedGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","type","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"iOAiBaA,EAbkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAICC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CAAEC,KAAMF,EAAMG,GAAIF,MAErCG,EAAiB,OACjBC,EAAmB,SAuBlB,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEIC,EAAc,KAEZC,EA3BR,SAAwBC,EAAON,EAAUO,GACvC,IAAMC,EAAW,YAAOlB,GAiBxB,OAfIU,GACFQ,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQX,GACN,KAAKJ,EACH,OAAOc,EAAMhB,KAAKkB,cAAcD,EAAMjB,MAExC,KAAKG,EACH,OAAOa,EAAMhB,KAAKmB,OAASF,EAAMjB,KAAKmB,OAExC,QACE,OAAO,MAKRN,EAAYC,EAAYM,UAAYN,EAStBO,CAAezB,EAAaU,EAAUE,GAqB3D,OAfIF,GAAYE,KACdE,EACE,wBACEY,KAAK,SACLC,UAAU,4BACVC,QAAS,WACPjB,EAAY,IACZE,GAAc,IALlB,oBAcF,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAS,yBAAoBjB,IAAaJ,EAAiB,GAAK,YAChEsB,QAAS,kBAAMjB,EAAYL,IAH7B,iCAQA,wBACEoB,KAAK,SACLC,UAAS,4BAAuBjB,IAAaH,EAAmB,GAAK,YACrEqB,QAAS,kBAAMjB,EAAYJ,IAH7B,4BAQA,wBACEmB,KAAK,SACLC,UAAS,4BAAuBf,EAAa,GAAK,YAClDgB,QAzCoB,WAC1Bf,GAAeD,IAqCX,qBAQCE,KAGH,6BACGC,EAAad,KAAI,SAACC,GACjB,IACEE,EAEEF,EAFFE,KACAC,EACEH,EADFG,GAGF,OACE,oBAAI,UAAQ,OAAZ,SAA6BD,GAALC,YC1GpCwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d103da5.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const goodsObject = goodsFromServer\n  .map((good, index) => ({ name: good, id: index }));\n\nconst SORT_TYPE_NAME = 'name';\nconst SORT_TYPE_LENGTH = 'length';\n\nfunction getSortedGoods(goods, sortType, toReverse) {\n  const sortedGoods = [...goodsObject];\n\n  if (sortType) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_TYPE_NAME:\n          return good1.name.localeCompare(good2.name);\n\n        case SORT_TYPE_LENGTH:\n          return good1.name.length - good2.name.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return toReverse ? sortedGoods.reverse() : sortedGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  let resetButton = null;\n\n  const visibleGoods = getSortedGoods(goodsObject, sortType, isReversed);\n\n  const handleReverseButton = () => {\n    setIsReversed(!isReversed);\n  };\n\n  if (sortType || isReversed) {\n    resetButton = (\n      <button\n        type=\"button\"\n        className=\"button is-danger is-light\"\n        onClick={() => {\n          setSortType('');\n          setIsReversed(false);\n        }}\n      >\n        Reset\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType === SORT_TYPE_NAME ? '' : 'is-light'}`}\n          onClick={() => setSortType(SORT_TYPE_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType === SORT_TYPE_LENGTH ? '' : 'is-light'}`}\n          onClick={() => setSortType(SORT_TYPE_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={handleReverseButton}\n        >\n          Reverse\n        </button>\n\n        {resetButton}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => {\n          const {\n            name,\n            id,\n          } = good;\n\n          return (\n            <li data-cy=\"Good\" key={id}>{name}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}